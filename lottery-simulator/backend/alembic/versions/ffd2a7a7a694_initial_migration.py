"""Initial migration

Revision ID: ffd2a7a7a694
Revises: 
Create Date: 2025-10-02 14:05:59.466124

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ffd2a7a7a694'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analysis_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('analysis_type', sa.String(length=50), nullable=False, comment='分析类型'),
    sa.Column('model_name', sa.String(length=50), nullable=False, comment='模型名称'),
    sa.Column('parameters', sa.JSON(), nullable=True, comment='分析参数'),
    sa.Column('result_data', sa.JSON(), nullable=False, comment='分析结果数据'),
    sa.Column('summary', sa.Text(), nullable=True, comment='结果摘要'),
    sa.Column('accuracy_score', sa.Float(), nullable=True, comment='准确率'),
    sa.Column('precision_score', sa.Float(), nullable=True, comment='精确率'),
    sa.Column('recall_score', sa.Float(), nullable=True, comment='召回率'),
    sa.Column('f1_score', sa.Float(), nullable=True, comment='F1分数'),
    sa.Column('execution_time', sa.Float(), nullable=True, comment='执行时间(秒)'),
    sa.Column('data_size', sa.Integer(), nullable=True, comment='数据量'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analysis_results_analysis_type'), 'analysis_results', ['analysis_type'], unique=False)
    op.create_index(op.f('ix_analysis_results_id'), 'analysis_results', ['id'], unique=False)
    op.create_table('lottery_draws',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('period_number', sa.String(length=20), nullable=False, comment='期号'),
    sa.Column('draw_date', sa.DateTime(), nullable=False, comment='开奖日期'),
    sa.Column('red_ball_1', sa.Integer(), nullable=False, comment='红球1'),
    sa.Column('red_ball_2', sa.Integer(), nullable=False, comment='红球2'),
    sa.Column('red_ball_3', sa.Integer(), nullable=False, comment='红球3'),
    sa.Column('red_ball_4', sa.Integer(), nullable=False, comment='红球4'),
    sa.Column('red_ball_5', sa.Integer(), nullable=False, comment='红球5'),
    sa.Column('red_ball_6', sa.Integer(), nullable=False, comment='红球6'),
    sa.Column('blue_ball', sa.Integer(), nullable=False, comment='蓝球'),
    sa.Column('total_sales', sa.Numeric(precision=15, scale=2), nullable=True, comment='总销售额'),
    sa.Column('prize_pool', sa.Numeric(precision=15, scale=2), nullable=True, comment='奖池金额'),
    sa.Column('prize_details', sa.JSON(), nullable=True, comment='各奖级详情'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lottery_draws_draw_date'), 'lottery_draws', ['draw_date'], unique=False)
    op.create_index(op.f('ix_lottery_draws_id'), 'lottery_draws', ['id'], unique=False)
    op.create_index(op.f('ix_lottery_draws_period_number'), 'lottery_draws', ['period_number'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False, comment='用户名'),
    sa.Column('password_hash', sa.String(length=255), nullable=True, comment='密码哈希'),
    sa.Column('nickname', sa.String(length=50), nullable=False, comment='昵称'),
    sa.Column('avatar', sa.String(length=255), nullable=True, comment='头像URL'),
    sa.Column('login_type', sa.String(length=20), nullable=False, comment='登录类型: wechat, alipay, phone'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否激活'),
    sa.Column('is_verified', sa.Boolean(), nullable=True, comment='是否已验证'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('last_login', sa.DateTime(), nullable=True, comment='最后登录时间'),
    sa.Column('phone', sa.String(length=20), nullable=True, comment='手机号'),
    sa.Column('email', sa.String(length=100), nullable=True, comment='邮箱'),
    sa.Column('real_name', sa.String(length=50), nullable=True, comment='真实姓名'),
    sa.Column('id_card', sa.String(length=20), nullable=True, comment='身份证号'),
    sa.Column('wechat_openid', sa.String(length=100), nullable=True, comment='微信OpenID'),
    sa.Column('alipay_user_id', sa.String(length=100), nullable=True, comment='支付宝用户ID'),
    sa.Column('preferences', sa.Text(), nullable=True, comment='用户偏好设置(JSON)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='用户ID'),
    sa.Column('balance', sa.Numeric(precision=10, scale=2), nullable=False, comment='账户余额'),
    sa.Column('frozen_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='冻结金额'),
    sa.Column('total_recharge', sa.Numeric(precision=10, scale=2), nullable=False, comment='总充值金额'),
    sa.Column('total_consumption', sa.Numeric(precision=10, scale=2), nullable=False, comment='总消费金额'),
    sa.Column('total_winnings', sa.Numeric(precision=10, scale=2), nullable=False, comment='总中奖金额'),
    sa.Column('daily_limit', sa.Numeric(precision=10, scale=2), nullable=True, comment='日限额'),
    sa.Column('monthly_limit', sa.Numeric(precision=10, scale=2), nullable=True, comment='月限额'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_accounts_id'), 'accounts', ['id'], unique=False)
    op.create_table('purchases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='用户ID'),
    sa.Column('period_number', sa.String(length=20), nullable=False, comment='期号'),
    sa.Column('lottery_draw_id', sa.Integer(), nullable=True, comment='开奖记录ID'),
    sa.Column('red_ball_1', sa.Integer(), nullable=False, comment='红球1'),
    sa.Column('red_ball_2', sa.Integer(), nullable=False, comment='红球2'),
    sa.Column('red_ball_3', sa.Integer(), nullable=False, comment='红球3'),
    sa.Column('red_ball_4', sa.Integer(), nullable=False, comment='红球4'),
    sa.Column('red_ball_5', sa.Integer(), nullable=False, comment='红球5'),
    sa.Column('red_ball_6', sa.Integer(), nullable=False, comment='红球6'),
    sa.Column('blue_ball', sa.Integer(), nullable=False, comment='蓝球'),
    sa.Column('bet_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='单注金额'),
    sa.Column('multiple', sa.Integer(), nullable=False, comment='倍数'),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='总金额'),
    sa.Column('is_checked', sa.Boolean(), nullable=True, comment='是否已检查中奖'),
    sa.Column('is_winning', sa.Boolean(), nullable=True, comment='是否中奖'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='购买时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['lottery_draw_id'], ['lottery_draws.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_purchases_id'), 'purchases', ['id'], unique=False)
    op.create_index(op.f('ix_purchases_period_number'), 'purchases', ['period_number'], unique=False)
    op.create_table('user_analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='用户ID'),
    sa.Column('analysis_result_id', sa.Integer(), nullable=False, comment='分析结果ID'),
    sa.Column('title', sa.String(length=100), nullable=True, comment='分析标题'),
    sa.Column('description', sa.Text(), nullable=True, comment='分析描述'),
    sa.Column('tags', sa.String(length=255), nullable=True, comment='标签'),
    sa.Column('user_rating', sa.Integer(), nullable=True, comment='用户评分(1-5)'),
    sa.Column('user_feedback', sa.Text(), nullable=True, comment='用户反馈'),
    sa.Column('view_count', sa.Integer(), nullable=True, comment='查看次数'),
    sa.Column('is_favorite', sa.Boolean(), nullable=True, comment='是否收藏'),
    sa.Column('is_shared', sa.Boolean(), nullable=True, comment='是否分享'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('last_viewed_at', sa.DateTime(), nullable=True, comment='最后查看时间'),
    sa.ForeignKeyConstraint(['analysis_result_id'], ['analysis_results.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_analyses_id'), 'user_analyses', ['id'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='用户ID'),
    sa.Column('account_id', sa.Integer(), nullable=False, comment='账户ID'),
    sa.Column('transaction_type', sa.Enum('RECHARGE', 'WITHDRAW', 'PURCHASE', 'WINNING', 'REFUND', 'FREEZE', 'UNFREEZE', name='transactiontype'), nullable=False, comment='交易类型'),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='交易金额'),
    sa.Column('balance_before', sa.Numeric(precision=10, scale=2), nullable=False, comment='交易前余额'),
    sa.Column('balance_after', sa.Numeric(precision=10, scale=2), nullable=False, comment='交易后余额'),
    sa.Column('status', sa.Enum('PENDING', 'SUCCESS', 'FAILED', 'CANCELLED', 'PROCESSING', name='transactionstatus'), nullable=True, comment='交易状态'),
    sa.Column('description', sa.String(length=255), nullable=True, comment='交易描述'),
    sa.Column('remark', sa.Text(), nullable=True, comment='备注'),
    sa.Column('payment_method', sa.String(length=50), nullable=True, comment='支付方式'),
    sa.Column('withdraw_method', sa.String(length=50), nullable=True, comment='提现方式'),
    sa.Column('account_info', sa.String(length=255), nullable=True, comment='账户信息'),
    sa.Column('external_transaction_id', sa.String(length=100), nullable=True, comment='外部交易ID'),
    sa.Column('related_purchase_id', sa.Integer(), nullable=True, comment='关联的购买记录ID'),
    sa.Column('related_winning_id', sa.Integer(), nullable=True, comment='关联的中奖记录ID'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('completed_at', sa.DateTime(), nullable=True, comment='完成时间'),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_table('winning_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='用户ID'),
    sa.Column('purchase_id', sa.Integer(), nullable=False, comment='购买记录ID'),
    sa.Column('lottery_draw_id', sa.Integer(), nullable=False, comment='开奖记录ID'),
    sa.Column('prize_level', sa.Integer(), nullable=False, comment='奖级 (1-6)'),
    sa.Column('red_match_count', sa.Integer(), nullable=False, comment='红球命中数'),
    sa.Column('blue_match', sa.Boolean(), nullable=False, comment='蓝球是否命中'),
    sa.Column('single_prize_amount', sa.Numeric(precision=15, scale=2), nullable=False, comment='单注奖金'),
    sa.Column('multiple', sa.Integer(), nullable=False, comment='倍数'),
    sa.Column('total_prize_amount', sa.Numeric(precision=15, scale=2), nullable=False, comment='总奖金'),
    sa.Column('is_claimed', sa.Boolean(), nullable=True, comment='是否已领奖'),
    sa.Column('claimed_at', sa.DateTime(), nullable=True, comment='领奖时间'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['lottery_draw_id'], ['lottery_draws.id'], ),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_winning_records_id'), 'winning_records', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_winning_records_id'), table_name='winning_records')
    op.drop_table('winning_records')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_user_analyses_id'), table_name='user_analyses')
    op.drop_table('user_analyses')
    op.drop_index(op.f('ix_purchases_period_number'), table_name='purchases')
    op.drop_index(op.f('ix_purchases_id'), table_name='purchases')
    op.drop_table('purchases')
    op.drop_index(op.f('ix_accounts_id'), table_name='accounts')
    op.drop_table('accounts')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_lottery_draws_period_number'), table_name='lottery_draws')
    op.drop_index(op.f('ix_lottery_draws_id'), table_name='lottery_draws')
    op.drop_index(op.f('ix_lottery_draws_draw_date'), table_name='lottery_draws')
    op.drop_table('lottery_draws')
    op.drop_index(op.f('ix_analysis_results_id'), table_name='analysis_results')
    op.drop_index(op.f('ix_analysis_results_analysis_type'), table_name='analysis_results')
    op.drop_table('analysis_results')
    # ### end Alembic commands ###
